package Main;

public class GenerateCards {


	//This method generates all the cards in the deck:
	public Card[] spawnCards() {

		String[] colour = { "red", "green", "blue" };
		String[] symbol = { "ovals", "squiggles", "diamonds" };
		String[] shading = { "solid", "open", "striped" };

		int counter = 0, max = 81;
		Card[] cards = new Card[max];
		Integer[] numStore = new Integer[max];
		String[] shadingStore = new String[max];
		String[] symbolStore = new String[max];
		String[] colourStore = new String[max];

		//@ loop_invariant 0 <= i && i <= numStore.length;
		//@ loop_writes i, numStore[*];
		//@ maintaining \forall int k; 0 <= k < i; numStore[k] ==  1 | numStore[k] ==  2 | numStore[k] ==  3;
		//@ decreases numStore.length - i;
		for (int i = 0; i < numStore.length; i++) {
			// @ assume 0 <= numberVal < cards.length;
			numStore[i] = (counter % 3) + 1;
			if (i == 26 || i == 53)
				counter = +1;
		}

		//@ loop_invariant 0 <= i && i % 3 <= colour.length;
		//@ loop_invariant 0 <= i && i <= colourStore.length;
		//@ loop_writes i, colourStore[*];
		//@ maintaining \forall int k; 0 <= k < i; colourStore[k] ==  colour[k % 3];
		//@ decreases colourStore.length - i;
		for (int i = 0; i < colourStore.length; i++) {
			int sum = i % 3;
			colourStore[i] = colour[sum];
		}

		//@ loop_invariant 0 <= i && i % 3 <= symbol.length;
		//@ loop_invariant 0 <= i && i <= symbolStore.length;
		//@ maintaining \forall int k; 0 <= k < i; symbolStore[k] ==  symbol[0] | symbolStore[k] ==  symbol[1] | symbolStore[k] ==  symbol[2];
		//@ loop_writes i, symbolStore[*];
		for (int i = 0; i < symbolStore.length; i++) {
			i = +2;
			symbolStore[i] = symbol[i % 3];
			symbolStore[i - 1] = symbol[i % 3];
			symbolStore[i - 2] = symbol[i % 3];
		}


		
		//@ loop_invariant 0 <= i && i <= cards.length;
		//@ loop_invariant 0 <= counter % 3 && counter % 3 <= shading.length;
		//@ loop_writes i, cards[*];
		//@ maintaining \forall int k; 0 <= k < i; shadingStore[k] ==  shading[0] |  shadingStore[k] == shading[1] |  shadingStore[k] == shading[2];
		//@ decreases cards.length - i;
		for (int i = 0; i < cards.length; i += 9) {
			//@ assume (i + 9) <= cards.length;
			shadingStore[i] = (shading[counter % 3]);
			shadingStore[i + 1] = (shading[counter % 3]);
			shadingStore[i + 2] = (shading[counter % 3]);
			shadingStore[i + 3] = (shading[counter % 3]);
			shadingStore[i + 4] = (shading[counter % 3]);
			shadingStore[i + 5] = (shading[counter % 3]);
			shadingStore[i + 6] = (shading[counter % 3]);
			shadingStore[i + 7] = (shading[counter % 3]);
			shadingStore[i + 8] = (shading[counter % 3]);
			counter++;
		}

		//@ loop_invariant 0 <= i && i <= cards.length;
		//@ decreases cards.length - i;
		for (int i = 0; i < cards.length; i++) {
			cards[i] = new Card();
			cards[i].setNumber(numStore[i]);
			cards[i].setShading(shadingStore[i]);
			cards[i].setSymbol(symbolStore[i]);
			cards[i].setColour(colourStore[i]);
		}

		return cards;
	}

}


class testMethod {
	public Card[] create() {
		Card[] cards = new Card[81];
		cards[0] = new Card(); 
cards[0].setNumber(1); 
 cards[0].setColour("red"); 
 cards[0].setSymbol("diamonds"); 
 cards[0].setShading("striped");
cards[1] = new Card(); 
cards[1].setNumber(1); 
 cards[1].setColour("green"); 
 cards[1].setSymbol("diamonds"); 
 cards[1].setShading("striped");
cards[2] = new Card(); 
cards[2].setNumber(1); 
 cards[2].setColour("blue"); 
 cards[2].setSymbol("diamonds"); 
 cards[2].setShading("striped");
cards[3] = new Card(); 
cards[3].setNumber(1); 
 cards[3].setColour("red"); 
 cards[3].setSymbol("ovals"); 
 cards[3].setShading("striped");
cards[4] = new Card(); 
cards[4].setNumber(1); 
 cards[4].setColour("green"); 
 cards[4].setSymbol("ovals"); 
 cards[4].setShading("striped");
cards[5] = new Card(); 
cards[5].setNumber(1); 
 cards[5].setColour("blue"); 
 cards[5].setSymbol("ovals"); 
 cards[5].setShading("striped");
cards[6] = new Card(); 
cards[6].setNumber(1); 
 cards[6].setColour("red"); 
 cards[6].setSymbol("squiggles"); 
 cards[6].setShading("striped");
cards[7] = new Card(); 
cards[7].setNumber(1); 
 cards[7].setColour("green"); 
 cards[7].setSymbol("squiggles"); 
 cards[7].setShading("striped");
cards[8] = new Card(); 
cards[8].setNumber(1); 
 cards[8].setColour("blue"); 
 cards[8].setSymbol("squiggles"); 
 cards[8].setShading("striped");
cards[9] = new Card(); 
cards[9].setNumber(1); 
 cards[9].setColour("red"); 
 cards[9].setSymbol("diamonds"); 
 cards[9].setShading("solid");
cards[10] = new Card(); 
cards[10].setNumber(1); 
 cards[10].setColour("green"); 
 cards[10].setSymbol("diamonds"); 
 cards[10].setShading("solid");
cards[11] = new Card(); 
cards[11].setNumber(1); 
 cards[11].setColour("blue"); 
 cards[11].setSymbol("diamonds"); 
 cards[11].setShading("solid");
cards[12] = new Card(); 
cards[12].setNumber(1); 
 cards[12].setColour("red"); 
 cards[12].setSymbol("ovals"); 
 cards[12].setShading("solid");
cards[13] = new Card(); 
cards[13].setNumber(1); 
 cards[13].setColour("green"); 
 cards[13].setSymbol("ovals"); 
 cards[13].setShading("solid");
cards[14] = new Card(); 
cards[14].setNumber(1); 
 cards[14].setColour("blue"); 
 cards[14].setSymbol("ovals"); 
 cards[14].setShading("solid");
cards[15] = new Card(); 
cards[15].setNumber(1); 
 cards[15].setColour("red"); 
 cards[15].setSymbol("squiggles"); 
 cards[15].setShading("solid");
cards[16] = new Card(); 
cards[16].setNumber(1); 
 cards[16].setColour("green"); 
 cards[16].setSymbol("squiggles"); 
 cards[16].setShading("solid");
cards[17] = new Card(); 
cards[17].setNumber(1); 
 cards[17].setColour("blue"); 
 cards[17].setSymbol("squiggles"); 
 cards[17].setShading("solid");
cards[18] = new Card(); 
cards[18].setNumber(1); 
 cards[18].setColour("red"); 
 cards[18].setSymbol("diamonds"); 
 cards[18].setShading("open");
cards[19] = new Card(); 
cards[19].setNumber(1); 
 cards[19].setColour("green"); 
 cards[19].setSymbol("diamonds"); 
 cards[19].setShading("open");
cards[20] = new Card(); 
cards[20].setNumber(1); 
 cards[20].setColour("blue"); 
 cards[20].setSymbol("diamonds"); 
 cards[20].setShading("open");
cards[21] = new Card(); 
cards[21].setNumber(1); 
 cards[21].setColour("red"); 
 cards[21].setSymbol("ovals"); 
 cards[21].setShading("open");
cards[22] = new Card(); 
cards[22].setNumber(1); 
 cards[22].setColour("green"); 
 cards[22].setSymbol("ovals"); 
 cards[22].setShading("open");
cards[23] = new Card(); 
cards[23].setNumber(1); 
 cards[23].setColour("blue"); 
 cards[23].setSymbol("ovals"); 
 cards[23].setShading("open");
cards[24] = new Card(); 
cards[24].setNumber(1); 
 cards[24].setColour("red"); 
 cards[24].setSymbol("squiggles"); 
 cards[24].setShading("open");
cards[25] = new Card(); 
cards[25].setNumber(1); 
 cards[25].setColour("green"); 
 cards[25].setSymbol("squiggles"); 
 cards[25].setShading("open");
cards[26] = new Card(); 
cards[26].setNumber(1); 
 cards[26].setColour("blue"); 
 cards[26].setSymbol("squiggles"); 
 cards[26].setShading("open");
cards[27] = new Card(); 
cards[27].setNumber(2); 
 cards[27].setColour("red"); 
 cards[27].setSymbol("diamonds"); 
 cards[27].setShading("striped");
cards[28] = new Card(); 
cards[28].setNumber(2); 
 cards[28].setColour("green"); 
 cards[28].setSymbol("diamonds"); 
 cards[28].setShading("striped");
cards[29] = new Card(); 
cards[29].setNumber(2); 
 cards[29].setColour("blue"); 
 cards[29].setSymbol("diamonds"); 
 cards[29].setShading("striped");
cards[30] = new Card(); 
cards[30].setNumber(2); 
 cards[30].setColour("red"); 
 cards[30].setSymbol("ovals"); 
 cards[30].setShading("striped");
cards[31] = new Card(); 
cards[31].setNumber(2); 
 cards[31].setColour("green"); 
 cards[31].setSymbol("ovals"); 
 cards[31].setShading("striped");
cards[32] = new Card(); 
cards[32].setNumber(2); 
 cards[32].setColour("blue"); 
 cards[32].setSymbol("ovals"); 
 cards[32].setShading("striped");
cards[33] = new Card(); 
cards[33].setNumber(2); 
 cards[33].setColour("red"); 
 cards[33].setSymbol("squiggles"); 
 cards[33].setShading("striped");
cards[34] = new Card(); 
cards[34].setNumber(2); 
 cards[34].setColour("green"); 
 cards[34].setSymbol("squiggles"); 
 cards[34].setShading("striped");
cards[35] = new Card(); 
cards[35].setNumber(2); 
 cards[35].setColour("blue"); 
 cards[35].setSymbol("squiggles"); 
 cards[35].setShading("striped");
cards[36] = new Card(); 
cards[36].setNumber(2); 
 cards[36].setColour("red"); 
 cards[36].setSymbol("diamonds"); 
 cards[36].setShading("solid");
cards[37] = new Card(); 
cards[37].setNumber(2); 
 cards[37].setColour("green"); 
 cards[37].setSymbol("diamonds"); 
 cards[37].setShading("solid");
cards[38] = new Card(); 
cards[38].setNumber(2); 
 cards[38].setColour("blue"); 
 cards[38].setSymbol("diamonds"); 
 cards[38].setShading("solid");
cards[39] = new Card(); 
cards[39].setNumber(2); 
 cards[39].setColour("red"); 
 cards[39].setSymbol("ovals"); 
 cards[39].setShading("solid");
cards[40] = new Card(); 
cards[40].setNumber(2); 
 cards[40].setColour("green"); 
 cards[40].setSymbol("ovals"); 
 cards[40].setShading("solid");
cards[41] = new Card(); 
cards[41].setNumber(2); 
 cards[41].setColour("blue"); 
 cards[41].setSymbol("ovals"); 
 cards[41].setShading("solid");
cards[42] = new Card(); 
cards[42].setNumber(2); 
 cards[42].setColour("red"); 
 cards[42].setSymbol("squiggles"); 
 cards[42].setShading("solid");
cards[43] = new Card(); 
cards[43].setNumber(2); 
 cards[43].setColour("green"); 
 cards[43].setSymbol("squiggles"); 
 cards[43].setShading("solid");
cards[44] = new Card(); 
cards[44].setNumber(2); 
 cards[44].setColour("blue"); 
 cards[44].setSymbol("squiggles"); 
 cards[44].setShading("solid");
cards[45] = new Card(); 
cards[45].setNumber(2); 
 cards[45].setColour("red"); 
 cards[45].setSymbol("diamonds"); 
 cards[45].setShading("open");
cards[46] = new Card(); 
cards[46].setNumber(2); 
 cards[46].setColour("green"); 
 cards[46].setSymbol("diamonds"); 
 cards[46].setShading("open");
cards[47] = new Card(); 
cards[47].setNumber(2); 
 cards[47].setColour("blue"); 
 cards[47].setSymbol("diamonds"); 
 cards[47].setShading("open");
cards[48] = new Card(); 
cards[48].setNumber(2); 
 cards[48].setColour("red"); 
 cards[48].setSymbol("ovals"); 
 cards[48].setShading("open");
cards[49] = new Card(); 
cards[49].setNumber(2); 
 cards[49].setColour("green"); 
 cards[49].setSymbol("ovals"); 
 cards[49].setShading("open");
cards[50] = new Card(); 
cards[50].setNumber(2); 
 cards[50].setColour("blue"); 
 cards[50].setSymbol("ovals"); 
 cards[50].setShading("open");
cards[51] = new Card(); 
cards[51].setNumber(2); 
 cards[51].setColour("red"); 
 cards[51].setSymbol("squiggles"); 
 cards[51].setShading("open");
cards[52] = new Card(); 
cards[52].setNumber(2); 
 cards[52].setColour("green"); 
 cards[52].setSymbol("squiggles"); 
 cards[52].setShading("open");
cards[53] = new Card(); 
cards[53].setNumber(2); 
 cards[53].setColour("blue"); 
 cards[53].setSymbol("squiggles"); 
 cards[53].setShading("open");
cards[54] = new Card(); 
cards[54].setNumber(3); 
 cards[54].setColour("red"); 
 cards[54].setSymbol("diamonds"); 
 cards[54].setShading("striped");
cards[55] = new Card(); 
cards[55].setNumber(3); 
 cards[55].setColour("green"); 
 cards[55].setSymbol("diamonds"); 
 cards[55].setShading("striped");
cards[56] = new Card(); 
cards[56].setNumber(3); 
 cards[56].setColour("blue"); 
 cards[56].setSymbol("diamonds"); 
 cards[56].setShading("striped");
cards[57] = new Card(); 
cards[57].setNumber(3); 
 cards[57].setColour("red"); 
 cards[57].setSymbol("ovals"); 
 cards[57].setShading("striped");
cards[58] = new Card(); 
cards[58].setNumber(3); 
 cards[58].setColour("green"); 
 cards[58].setSymbol("ovals"); 
 cards[58].setShading("striped");
cards[59] = new Card(); 
cards[59].setNumber(3); 
 cards[59].setColour("blue"); 
 cards[59].setSymbol("ovals"); 
 cards[59].setShading("striped");
cards[60] = new Card(); 
cards[60].setNumber(3); 
 cards[60].setColour("red"); 
 cards[60].setSymbol("squiggles"); 
 cards[60].setShading("striped");
cards[61] = new Card(); 
cards[61].setNumber(3); 
 cards[61].setColour("green"); 
 cards[61].setSymbol("squiggles"); 
 cards[61].setShading("striped");
cards[62] = new Card(); 
cards[62].setNumber(3); 
 cards[62].setColour("blue"); 
 cards[62].setSymbol("squiggles"); 
 cards[62].setShading("striped");
cards[63] = new Card(); 
cards[63].setNumber(3); 
 cards[63].setColour("red"); 
 cards[63].setSymbol("diamonds"); 
 cards[63].setShading("solid");
cards[64] = new Card(); 
cards[64].setNumber(3); 
 cards[64].setColour("green"); 
 cards[64].setSymbol("diamonds"); 
 cards[64].setShading("solid");
cards[65] = new Card(); 
cards[65].setNumber(3); 
 cards[65].setColour("blue"); 
 cards[65].setSymbol("diamonds"); 
 cards[65].setShading("solid");
cards[66] = new Card(); 
cards[66].setNumber(3); 
 cards[66].setColour("red"); 
 cards[66].setSymbol("ovals"); 
 cards[66].setShading("solid");
cards[67] = new Card(); 
cards[67].setNumber(3); 
 cards[67].setColour("green"); 
 cards[67].setSymbol("ovals"); 
 cards[67].setShading("solid");
cards[68] = new Card(); 
cards[68].setNumber(3); 
 cards[68].setColour("blue"); 
 cards[68].setSymbol("ovals"); 
 cards[68].setShading("solid");
cards[69] = new Card(); 
cards[69].setNumber(3); 
 cards[69].setColour("red"); 
 cards[69].setSymbol("squiggles"); 
 cards[69].setShading("solid");
cards[70] = new Card(); 
cards[70].setNumber(3); 
 cards[70].setColour("green"); 
 cards[70].setSymbol("squiggles"); 
 cards[70].setShading("solid");
cards[71] = new Card(); 
cards[71].setNumber(3); 
 cards[71].setColour("blue"); 
 cards[71].setSymbol("squiggles"); 
 cards[71].setShading("solid");
cards[72] = new Card(); 
cards[72].setNumber(3); 
 cards[72].setColour("red"); 
 cards[72].setSymbol("diamonds"); 
 cards[72].setShading("open");
cards[73] = new Card(); 
cards[73].setNumber(3); 
 cards[73].setColour("green"); 
 cards[73].setSymbol("diamonds"); 
 cards[73].setShading("open");
cards[74] = new Card(); 
cards[74].setNumber(3); 
 cards[74].setColour("blue"); 
 cards[74].setSymbol("diamonds"); 
 cards[74].setShading("open");
cards[75] = new Card(); 
cards[75].setNumber(3); 
 cards[75].setColour("red"); 
 cards[75].setSymbol("ovals"); 
 cards[75].setShading("open");
cards[76] = new Card(); 
cards[76].setNumber(3); 
 cards[76].setColour("green"); 
 cards[76].setSymbol("ovals"); 
 cards[76].setShading("open");
cards[77] = new Card(); 
cards[77].setNumber(3); 
 cards[77].setColour("blue"); 
 cards[77].setSymbol("ovals"); 
 cards[77].setShading("open");
cards[78] = new Card(); 
cards[78].setNumber(3); 
 cards[78].setColour("red"); 
 cards[78].setSymbol("squiggles"); 
 cards[78].setShading("open");
cards[79] = new Card(); 
cards[79].setNumber(3); 
 cards[79].setColour("green"); 
 cards[79].setSymbol("squiggles"); 
 cards[79].setShading("open");
cards[80] = new Card(); 
cards[80].setNumber(3); 
 cards[80].setColour("blue"); 
 cards[80].setSymbol("squiggles"); 
 cards[80].setShading("open");
 return cards;
	}
}